{"version":3,"sources":["getData.js","elements.js","info.js","publication.js","project.js","work.js","main.js","serviceWorker.js","index.js"],"names":["publicURL","process","getData","url","callback","reqwest","Date","getTime","type","method","contentType","success","checkUrl","startsWith","getInfo","Loading","className","tip","this","props","size","Component","defaultProps","Title","Text","Paragraph","Meta","Info","state","info","loading","parseList","where","mail","li","push","map","d","i","key","href","text","style","marginRight","copyable","parseEdu","edu","education","mode","e","dot","status","fontSize","undefined","descriptions","j","Item","parseCourses","courses","maxShow","list","slice","presetColors","colors","length","tags","c","color","level","parseFYI","fyi","FYI","onClick","window","open","title","setState","justify","span","name","orientation","github","hoverable","cover","alt","src","description","dangerouslySetInnerHTML","__html","interests","changeKey","Panel","Publications","data","bordered","defaultActiveKey","header","supplementMaterial","str","subStr","indexes","forEach","sub","searchStr","caseSensitive","searchStrLen","index","startIndex","indices","toLowerCase","indexOf","start","end","getIndicesOf","Array","keys","filter","Set","content","boldIndex","italicIndex","markIndex","newLineIndex","classArray","classes","has","join","intervals","intervalClasses","currentClass","currentIndex","colorMap","Object","k","words","computeIndexes","s","supplement","width","texts","computeClasses","css","textColor","textStyle","strong","mark","cssClass","arxiv","target","pdf","background","Project","orient","order","Projects","Work","parseData","val","value","label","basicInfo","required","detailInfo","detail","from","to","Works","Header","Content","Footer","Main","item","handleMenuClick","bind","position","zIndex","theme","defaultSelectedKeys","selectedKeys","lineHeight","padding","marginTop","margin","minHeight","textAlign","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2eb2a5b.chunk.js","sourcesContent":["import reqwest from 'reqwest';\r\n\r\nconst publicURL = process.env.PUBLIC_URL;\r\n\r\nfunction getData(url, callback) {\r\n    reqwest({\r\n        url: url + '?time=' + (new Date().getTime()),\r\n        type: 'json',\r\n        method: 'get',\r\n        contentType: 'application/json',\r\n        success: callback\r\n    });\r\n}\r\n\r\n\r\nexport function checkUrl(url) {\r\n    if (url.startsWith('http'))\r\n        return url;\r\n    else\r\n        return publicURL + '/' + url;\r\n}\r\n\r\nexport function getProjects(callback) {\r\n    const url = publicURL + '/project/projects.json';\r\n    getData(url, callback);\r\n}\r\n\r\nexport function getWorks(callback) {\r\n    const url = publicURL + '/work/works.json';\r\n    getData(url, callback);\r\n}\r\n\r\nexport function getPublications(callback) {\r\n    const url = publicURL + '/publication/publications.json';\r\n    getData(url, callback);\r\n}\r\n\r\nexport function getInfo(callback) {\r\n    const url = publicURL + '/info/info.json';\r\n    getData(url, callback);\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Spin} from \"antd\";\r\n\r\nexport class Loading extends Component {\r\n    render() {\r\n        return <Spin className=\"center margin-top-larger\" tip={this.props.tip} size={this.props.size}/>\r\n    }\r\n}\r\n\r\nLoading.defaultProps = {\r\n    tip: \"Wait a second, I'm coming!\",\r\n    size: \"large\"\r\n};","import React, {Component} from 'react';\r\nimport {Typography, Timeline, Icon, Row, Col, Divider, Card, Tag, Button} from 'antd';\r\nimport {checkUrl, getInfo} from \"./getData\";\r\nimport {Loading} from \"./elements\";\r\n\r\nconst {Title, Text, Paragraph} = Typography;\r\nconst {Meta} = Card;\r\n\r\nexport class Info extends Component {\r\n\r\n    state = {\r\n        info: null,\r\n        loading: false,\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.setState({loading: true});\r\n        getInfo(info => this.setState({info, loading: false}));\r\n    }\r\n\r\n    parseList = () => {\r\n        const where = this.state.info.where;\r\n        const mail = this.state.info.mail;\r\n        let li = [];\r\n        if (where)\r\n            li.push(...where.map((d, i) => {\r\n                if (typeof (d) === \"string\")\r\n                    return <li key={i}>{d}</li>;\r\n                if (d.url)\r\n                    return <li key={i}><a href={d.url}>{d.text}</a></li>;\r\n                else\r\n                    return <li key={i}>{d.text}</li>;\r\n            }));\r\n        if (mail)\r\n            li.push(<li key='mail'><Icon type='mail' style={{marginRight: 15}}/><Text type='secondary'\r\n                                                                                      copyable>{mail}</Text></li>);\r\n        return <ul>{li}</ul>;\r\n    };\r\n    parseEdu = () => {\r\n        const edu = this.state.info.education;\r\n        if (!edu)\r\n            return [];\r\n        return <Timeline className='timeLine' mode=\"left\">{\r\n            edu.map((e, i) => {\r\n                const dot = e.status === \"processing\" ?\r\n                    <Icon type=\"clock-circle-o\" style={{fontSize: '16px'}}/> : undefined;\r\n                let descriptions = e.descriptions;\r\n                if (typeof (descriptions) === \"string\")\r\n                    descriptions = [descriptions];\r\n                descriptions = descriptions.map((d, j) => <Paragraph key={j} type=\"secondary\"\r\n                                                                     className=\"small\">{d}</Paragraph>);\r\n                return <Timeline.Item dot={dot} key={i}>{descriptions}</Timeline.Item>;\r\n            })\r\n        }\r\n        </Timeline>\r\n    };\r\n    parseCourses = () => {\r\n        if (!(this.state.info.courses))\r\n            return [];\r\n        const maxShow = this.state.info.courses.maxShow;\r\n        const courses = this.state.info.courses.list.slice(0, maxShow);\r\n        const presetColors = [\"magenta\", \"red\", \"volcano\", \"orange\", \"gold\", \"lime\", \"green\", \"cyan\", \"blue\", \"geekblue\", \"purple\"];\r\n        let colors = [];\r\n        while (colors.length < courses.length)\r\n            colors.push(...presetColors);\r\n        let tags = courses.map((c, i) => <Tag className='small' key={i} color={colors[i]}>{c}</Tag>);\r\n        if (tags.length === 0)\r\n            return [];\r\n        if (tags.length < this.state.info.courses.list.length)\r\n            tags.push(<Tag key='omitted'>...</Tag>);\r\n        return <Paragraph><Title level={4}>Courses</Title>{tags}</Paragraph>\r\n    };\r\n    parseFYI = () => {\r\n        let fyi = this.state.info.FYI;\r\n        if (!fyi)\r\n            return [];\r\n        return fyi.map((d, i) => <li key={i}><Button type='link' onClick={() => {\r\n            window.open(checkUrl(d.url), '_blank');\r\n        }}>{d.title}</Button></li>)\r\n    };\r\n\r\n    render() {\r\n        const info = this.state.info;\r\n        if (!info || this.state.loading)\r\n            return <Loading tip=\"Wait a second, I'm coming!\"/>;\r\n        return (\r\n            <div>\r\n                <Row type='flex' justify='space-between'>\r\n                    <Col span={8}>\r\n                        <Title level={2}><Text type='secondary'>HELLO,</Text> <br/> I AM {info.name}</Title>\r\n                        <Paragraph>\r\n                            {this.parseList()}\r\n                        </Paragraph>\r\n                        <div className='margin-bottom-large'/>\r\n                        <Divider orientation='left'> <Title level={3} className=\"right\">EDUCATION</Title></Divider>\r\n                        {this.parseEdu()}\r\n                        {this.parseCourses()}\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <a href={info.github}>\r\n                            <Card\r\n                                hoverable\r\n                                cover={<img alt=\"Imagine that I'm very handsome\"\r\n                                            src={checkUrl(info.cover)}/>}\r\n                            >\r\n                                <Meta title={info.name} description={<p className='small '>{info.github}</p>}/>\r\n                            </Card>\r\n                        </a>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Divider><Title level={3}>Research Interests</Title></Divider>\r\n                        <Paragraph type='secondary' className='justify indent '>\r\n                            <div dangerouslySetInnerHTML={{__html: info.interests}}/>\r\n                        </Paragraph>\r\n                        <div className=\"margin-top-large\"/>\r\n                        <Divider><Title level={3}>FYI</Title></Divider>\r\n                        <ul>\r\n                            <li><Button type='link' onClick={() => this.props.changeKey('publication')}>My\r\n                                Publication</Button></li>\r\n                            <li><Button type='link' onClick={() => this.props.changeKey('project')}>My Project</Button>\r\n                            </li>\r\n                            <li><Button type='link' onClick={() => this.props.changeKey('work')}>My Work\r\n                                Experience</Button>\r\n                            </li>\r\n                            {this.parseFYI()}\r\n                        </ul>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Typography, Collapse, Empty} from 'antd';\r\nimport {getPublications, checkUrl} from \"./getData\";\r\nimport {Loading} from \"./elements\";\r\n\r\nconst {Panel} = Collapse;\r\nconst {Text} = Typography;\r\n\r\nfunction getIndicesOf(searchStr, str, caseSensitive) {\r\n    let searchStrLen = searchStr.length;\r\n    if (searchStrLen === 0) {\r\n        return [];\r\n    }\r\n    let startIndex = 0, index, indices = [];\r\n    if (!caseSensitive) {\r\n        str = str.toLowerCase();\r\n        searchStr = searchStr.toLowerCase();\r\n    }\r\n    while ((index = str.indexOf(searchStr, startIndex)) > -1) {\r\n        indices.push({start: index, end: index + searchStrLen});\r\n        startIndex = index + searchStrLen;\r\n    }\r\n    return indices;\r\n}\r\n\r\nexport class Publications extends Component {\r\n    state = {\r\n        data: [],\r\n        loading: false\r\n    };\r\n    static supplementMaterial = (data) => {\r\n        const supplement = data.supplement;\r\n        if (!supplement)\r\n            return <Empty description=\"There is no supplement materials for this paper.\"/>;\r\n        let supplementArray;\r\n        if (supplement.length === undefined)\r\n            supplementArray = [supplement];\r\n        else\r\n            supplementArray = supplement;\r\n        return supplementArray.map((s, i) => {\r\n            if (s.type === 'image')\r\n                return <img key={i} width='100%' alt='imagine there is a poster' src={checkUrl(s.src)}/>;\r\n            else if (s.type === 'video')\r\n                return <div key={i} dangerouslySetInnerHTML={{__html: s.src}}/>;\r\n            else\r\n                return <div key={i}/>;\r\n\r\n        });\r\n    };\r\n\r\n    static computeIndexes(str, subStr) {\r\n        if (!subStr)\r\n            return [];\r\n        if (typeof (subStr) === \"string\")\r\n            subStr = [subStr];\r\n        let indexes = [];\r\n        subStr.forEach(sub => {\r\n            const index = getIndicesOf(sub, str, true);\r\n            index.map(d => indexes.push(...[...Array(d.end).keys()].filter(i => i >= d.start)))\r\n        });\r\n        return new Set(indexes);\r\n    }\r\n\r\n    static computeClassArray(content, boldIndex, italicIndex, markIndex, newLineIndex) {\r\n        const classArray = [...Array(content.length).keys()].map(i => {\r\n            let classes = [];\r\n            if (boldIndex.has(i))\r\n                classes.push('bold');\r\n            if (italicIndex.has(i))\r\n                classes.push('italic');\r\n            if (markIndex.has(i))\r\n                classes.push('mark');\r\n            if (newLineIndex.has(i))\r\n                classes.push('br');\r\n            return classes.join('+');\r\n        });\r\n        let intervals = [];\r\n        let intervalClasses = [];\r\n        let currentClass = classArray[0];\r\n        let currentIndex = 0;\r\n        for (let i = 1; i < classArray.length; i++) {\r\n            // if (i in newLineIndex) {\r\n            //     intervals.push([currentIndex, i]);\r\n            //     intervalClasses.push(currentClass);\r\n            // }\r\n            if (classArray[i] === currentClass && classArray[i].indexOf('br') === -1)\r\n                continue;\r\n            intervals.push([currentIndex, i]);\r\n            intervalClasses.push(currentClass);\r\n            currentIndex = i;\r\n            currentClass = classArray[i];\r\n\r\n            if (currentClass.indexOf('br') > -1) {\r\n                intervals.push([i, i + 1]);\r\n                intervalClasses.push(\"br\");\r\n                if (currentClass === \"br\")\r\n                    currentClass = \"\";\r\n                else\r\n                    currentClass = currentClass.slice(0, -3);\r\n            }\r\n        }\r\n        intervals.push([currentIndex, classArray.length]);\r\n        intervalClasses.push(currentClass);\r\n        return {intervals: intervals, classes: intervalClasses};\r\n    }\r\n\r\n    static computeClasses(data) {\r\n        const content = data.content;\r\n        let keys = [\"bold\", \"italic\", \"mark\", \"br\"];\r\n        if (data.colorMap)\r\n            keys.push(...Object.keys(data.colorMap));\r\n        const keyWords = keys.map(k => k === \"br\" ? '\\n' : k.startsWith('rgb') ? data.colorMap[k] : data[k]);\r\n        const indexes = keyWords.map(words => Publications.computeIndexes(content, words));\r\n        return [...Array(content.length).keys()].map(i => indexes.map((index, j) => index.has(i) ? keys[j] : \"\").filter(s => s !== \"\"))\r\n    }\r\n\r\n    static header = (data) => {\r\n        const cssClasses = Publications.computeClasses(data);\r\n        const texts = cssClasses.map((css, i) => {\r\n            if (css.indexOf(\"br\")>-1)\r\n                return <br key={i}/>;\r\n            const textColor = css.filter(c => c.startsWith('rgb'));\r\n            const textStyle = textColor.length > 0 ? {color: textColor[0]} : undefined;\r\n            let strong = css.indexOf(\"bold\") > -1;\r\n            let mark = css.indexOf(\"mark\") > -1;\r\n            let cssClass = \"\";\r\n            if (css.indexOf(\"italic\") > -1)\r\n                cssClass = \"italic\";\r\n            return <Text strong={strong} mark={mark} key={i}\r\n                         className={cssClass} style={textStyle}>{data.content[i]}</Text>\r\n\r\n        });\r\n        const arxiv = data.arxiv;\r\n        if (arxiv)\r\n            texts.push(<Text key='arxiv'>&nbsp;&nbsp;&nbsp;&nbsp;<a href={arxiv} target=\"_blank\">[arxiv]</a></Text>);\r\n        const pdf = data.pdf;\r\n        if (pdf)\r\n            texts.push(<Text key='pdf'>&nbsp;&nbsp;&nbsp;&nbsp;<a href={checkUrl(pdf)}\r\n                                                                  target=\"_blank\">[pdf]</a></Text>);\r\n        const github = data.github;\r\n        if (github)\r\n            texts.push(<Text key='github'>&nbsp;&nbsp;&nbsp;&nbsp;<a href={checkUrl(github)}\r\n                                                                     target=\"_blank\">[github]</a></Text>);\r\n        return <Text className='paperInfo' style={{\"background\": data.background}}>{texts}</Text>;\r\n    };\r\n    // static header = (data) => {\r\n    //     const content = data.content;\r\n    //     const boldIndex = Publications.computeIndexes(content, data.bold);\r\n    //     const italicIndex = Publications.computeIndexes(content, data.italic);\r\n    //     const markIndex = Publications.computeIndexes(content, data.mark);\r\n    //     const newLineIndex = Publications.computeIndexes(content, '\\n');\r\n    //     const colorMap = data.colorMap;\r\n    //     const interval_class = Publications.computeClassArray(content, boldIndex, italicIndex, markIndex, newLineIndex);\r\n    //     let texts = [];\r\n    //     for (let i = 0; i < interval_class.intervals.length; i++) {\r\n    //         const interval = interval_class.intervals[i];\r\n    //         const css = interval_class.classes[i];\r\n    //         if (css === \"br\") {\r\n    //             texts.push(<br key={i}/>);\r\n    //             continue;\r\n    //         }\r\n    //         let strong = css.indexOf(\"bold\") > -1;\r\n    //         let mark = css.indexOf(\"mark\") > -1;\r\n    //         let cssClass = \"\";\r\n    //         if (css.indexOf(\"italic\") > -1)\r\n    //             cssClass = \"italic\";\r\n    //         texts.push(<Text strong={strong} mark={mark} key={i}\r\n    //                          className={cssClass}>{content.slice(interval[0], interval[1])}</Text>);\r\n    //     }\r\n    //     const arxiv = data.arxiv;\r\n    //     if (arxiv)\r\n    //         texts.push(<Text key='arxiv'>&nbsp;&nbsp;&nbsp;&nbsp;<a href={arxiv} target=\"_blank\">[arxiv]</a></Text>);\r\n    //     const pdf = data.pdf;\r\n    //     if (pdf)\r\n    //         texts.push(<Text key='pdf'>&nbsp;&nbsp;&nbsp;&nbsp;<a href={checkUrl(pdf)}\r\n    //                                                               target=\"_blank\">[pdf]</a></Text>);\r\n    //     const github = data.github;\r\n    //     if (github)\r\n    //         texts.push(<Text key='github'>&nbsp;&nbsp;&nbsp;&nbsp;<a href={checkUrl(github)}\r\n    //                                                                  target=\"_blank\">[github]</a></Text>);\r\n    //     return <Text className='paperInfo' style={{\"background\": data.background}}>{texts}</Text>;\r\n    //\r\n    // };\r\n\r\n    componentWillMount() {\r\n        this.setState({loading: true});\r\n        getPublications(data => this.setState({data, loading: false}));\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading)\r\n            return <Loading tip=\"Wait a second, u will see wonderful papers!\"/>;\r\n        return (\r\n            <Collapse bordered={false} defaultActiveKey={[]}>\r\n                {this.state.data.map((d, i) => <Panel key={i}\r\n                                                      header={Publications.header(d)}>{Publications.supplementMaterial(d)}</Panel>)}\r\n            </Collapse>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {getProjects} from \"./getData\";\r\nimport {Typography, Divider} from 'antd';\r\nimport {Loading} from \"./elements\";\r\n\r\nconst {Title, Paragraph} = Typography;\r\n\r\nclass Project extends Component {\r\n    render() {\r\n        const data = this.props.data;\r\n        const orient = this.props.order % 2 ? 'right' : 'left';\r\n        return (\r\n            <Typography className='margin-top-large'>\r\n                <Divider orientation={orient}> <Title level={3}>{data.title}</Title></Divider>\r\n                <Paragraph type=\"secondary\"\r\n                           className={orient + ' margin-' + orient}>{data.start} - {data.end}</Paragraph>\r\n                <Paragraph className={orient === 'right' ? 'margin-right' : ''}>\r\n                    <ul className={orient + 'List'}>\r\n                        {data.descriptions.map((d, i) => <li key={i}>{d}</li>)}\r\n                    </ul>\r\n                </Paragraph>\r\n            </Typography>\r\n        )\r\n    }\r\n}\r\n\r\nexport class Projects extends Component {\r\n    state = {\r\n        data: [],\r\n        loading: false,\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.setState({loading: true});\r\n        getProjects(data => this.setState({data, loading: false}));\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading)\r\n            return <Loading tip=\"Wait a second, my projects are wonderful!\" size=\"large\"/>;\r\n        return (\r\n            <div>\r\n                {this.state.data.map((d, i) => <Project data={d} key={i} order={i}/>)}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Typography, Descriptions, Divider} from 'antd';\r\nimport {getWorks} from \"./getData\";\r\nimport {Loading} from \"./elements\";\r\n\r\nconst {Title, Text} = Typography;\r\n\r\nclass Work extends Component {\r\n    parseData = (key, val) => {\r\n        const span = val.span;\r\n        const value = val.value || val;\r\n        if (typeof (value) === \"string\") // val is a string\r\n            return <Descriptions.Item span={span} label={key} key={key}>{value}</Descriptions.Item>;\r\n        else if (value.length !== undefined) // val is a list\r\n            return <Descriptions.Item span={span} label={key} key={key}>\r\n                <ul>{value.map((d, i) => <li key={i}>{d}</li>)}</ul>\r\n            </Descriptions.Item>;\r\n        else {\r\n            return <div/>;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const basicInfo = this.props.data.required;\r\n        const detailInfo = this.props.data.detail;\r\n        const title = <Divider orientation=\"left\"><Title level={3}>{basicInfo.title} <Text\r\n            type=\"secondary\" className='smaller'>({basicInfo.from} - {basicInfo.to})</Text></Title></Divider>;\r\n        return (\r\n            <Descriptions className=\"margin-top-large\" title={title} bordered>\r\n                {Object.keys(detailInfo).map(k => this.parseData(k, detailInfo[k]))}\r\n            </Descriptions>\r\n        )\r\n    }\r\n}\r\n\r\nexport class Works extends Component {\r\n\r\n    state = {\r\n        data: [],\r\n        loading: false\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.setState({loading: true});\r\n        getWorks(data => this.setState({data, loading: false}));\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading)\r\n            return <Loading tip=\"Wait a second, my work experience is impressive!\" size=\"large\"/>;\r\n        return (\r\n            <div>\r\n                {this.state.data.map((d, i) => <Work data={d} key={i}/>)}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport {Layout, Menu, Breadcrumb, Typography, Button} from 'antd';\r\nimport {Info} from \"./info\";\r\nimport {Publications} from \"./publication\";\r\nimport {Projects} from \"./project\";\r\nimport {Works} from \"./work\";\r\nimport './main.css';\r\nimport {getInfo} from \"./getData\";\r\nimport {Loading} from \"./elements\";\r\n\r\nconst {Text} = Typography;\r\nconst {Header, Content, Footer} = Layout;\r\n\r\nexport class Main extends Component {\r\n    changeKey = (key) => {\r\n        const item = {key: key};\r\n        this.handleMenuClick(item);\r\n    };\r\n    state = {\r\n        info: [],\r\n        content: <Info changeKey={this.changeKey.bind(this)}/>,\r\n        title: \"About Me\",\r\n        key: \"info\",\r\n        loading: false,\r\n    };\r\n    handleMenuClick = (item) => {\r\n        const key = item.key;\r\n        let content;\r\n        let title;\r\n        switch (key) {\r\n            case 'info':\r\n                content = <Info changeKey={this.changeKey.bind(this)}/>;\r\n                title = \"About Me\";\r\n                break;\r\n            case 'publication':\r\n                content = <Publications/>;\r\n                title = \"Publication\";\r\n                break;\r\n            case 'project':\r\n                content = <Projects/>;\r\n                title = \"Project\";\r\n                break;\r\n            case 'work':\r\n                content = <Works/>;\r\n                title = \"Work Experience\";\r\n                break;\r\n            default:\r\n                content = null;\r\n                title = \"\";\r\n        }\r\n        this.setState({content, title, key});\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.setState({loading: true});\r\n        getInfo(info => {\r\n            this.setState({info: info, loading: false})\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const info = this.state.info;\r\n        if (!info || this.state.loading)\r\n            return <Loading/>;\r\n        return (\r\n            <Layout>\r\n                <Header style={{position: 'fixed', zIndex: 1, width: '100%'}}>\r\n                    <div className=\"logo\">{info.name}</div>\r\n                    <Menu\r\n                        theme=\"dark\"\r\n                        mode=\"horizontal\"\r\n                        defaultSelectedKeys={['info']}\r\n                        selectedKeys={[this.state.key]}\r\n                        style={{lineHeight: '64px'}}\r\n                        onClick={this.handleMenuClick}\r\n                    >\r\n                        <Menu.Item key=\"info\">About Me</Menu.Item>\r\n                        <Menu.Item key=\"publication\">Publication</Menu.Item>\r\n                        <Menu.Item key=\"project\">Project</Menu.Item>\r\n                        <Menu.Item key=\"work\">Work Experience</Menu.Item>\r\n                    </Menu>\r\n                </Header>\r\n                <Content style={{padding: '0 50px', marginTop: 64}}>\r\n                    <Breadcrumb style={{margin: '16px 0'}}>\r\n                        <Breadcrumb.Item><Button type='link' style={{padding: 0}}\r\n                                                 onClick={() => this.changeKey(\"info\")}>{info.name}</Button></Breadcrumb.Item>\r\n                        <Breadcrumb.Item>{this.state.title}</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                    <div style={{\r\n                        background: '#fff',\r\n                        padding: 24,\r\n                        minHeight: 380,\r\n                    }}>\r\n                        {this.state.content}\r\n                    </div>\r\n                </Content>\r\n                <Footer style={{textAlign: 'center'}}>Contact: <Text type='secondary'\r\n                                                                     copyable>{info.mail}</Text></Footer>\r\n            </Layout>)\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Main} from \"./main\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Main />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}