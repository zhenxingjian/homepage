{"version":3,"sources":["getData.js","info.js","paper.js","program.js","work.js","main.js","serviceWorker.js","index.js"],"names":["publicURL","process","getData","url","callback","reqwest","Date","getTime","type","method","contentType","success","checkUrl","startsWith","getInfo","Title","Text","Paragraph","Meta","Info","state","info","parseList","where","mail","li","push","map","d","i","key","href","text","style","marginRight","copyable","parseEdu","edu","education","className","mode","e","dot","status","fontSize","undefined","descriptions","j","Item","parseCourses","courses","maxShow","list","slice","presetColors","colors","length","tags","c","color","level","parseCV","cv","show","onClick","window","open","setState","this","justify","span","name","orientation","github","hoverable","cover","alt","src","title","description","dangerouslySetInnerHTML","__html","interests","props","changeKey","Component","Panel","Papers","data","bordered","defaultActiveKey","header","supplementMaterial","str","subStr","indexes","forEach","sub","start","indexOf","end","Array","keys","filter","Set","content","boldIndex","italicIndex","markIndex","classArray","classes","has","join","intervals","intervalClasses","currentClass","currentIndex","supplement","width","computeIndexes","bold","italic","mark","interval_class","computeClassArray","texts","interval","css","strong","cssClass","arxiv","target","pdf","Program","orient","order","Programs","Work","parseData","val","value","label","basicInfo","required","detailInfo","detail","from","to","Object","k","Works","Header","Content","Footer","Main","item","handleMenuClick","bind","console","log","position","zIndex","theme","defaultSelectedKeys","selectedKeys","lineHeight","padding","marginTop","margin","background","minHeight","textAlign","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.666d9bfd.chunk.js","sourcesContent":["import reqwest from 'reqwest';\r\n\r\nconst publicURL = process.env.PUBLIC_URL;\r\n\r\nfunction getData(url, callback) {\r\n    reqwest({\r\n        url: url + '?time=' + (new Date().getTime()),\r\n        type: 'json',\r\n        method: 'get',\r\n        contentType: 'application/json',\r\n        success: callback\r\n    });\r\n}\r\n\r\n\r\nexport function checkUrl(url) {\r\n    if (url.startsWith('http'))\r\n        return url;\r\n    else\r\n        return publicURL + '/' + url;\r\n}\r\n\r\nexport function getPrograms(callback) {\r\n    const url = publicURL + '/program/programs.json';\r\n    getData(url, callback);\r\n}\r\n\r\nexport function getWorks(callback) {\r\n    const url = publicURL + '/work/works.json';\r\n    getData(url, callback);\r\n}\r\n\r\nexport function getPapers(callback) {\r\n    const url = publicURL + '/paper/papers.json';\r\n    getData(url, callback);\r\n}\r\n\r\nexport function getInfo(callback) {\r\n    const url = publicURL + '/info/info.json';\r\n    getData(url, callback);\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Typography, Timeline, Icon, Row, Col, Divider, Card, Tag, Button} from 'antd';\r\nimport {checkUrl, getInfo} from \"./getData\";\r\n\r\nconst {Title, Text, Paragraph} = Typography;\r\nconst {Meta} = Card;\r\n\r\nexport class Info extends Component {\r\n\r\n    state = {\r\n        info: null\r\n    };\r\n\r\n    componentWillMount() {\r\n        getInfo(info => this.setState({info}));\r\n    }\r\n\r\n    parseList = () => {\r\n        const where = this.state.info.where;\r\n        const mail = this.state.info.mail;\r\n        let li = [];\r\n        if (where)\r\n            li.push(...where.map((d, i) => {\r\n                if (typeof (d) === \"string\")\r\n                    return <li key={i}>{d}</li>;\r\n                if (d.url)\r\n                    return <li key={i}><a href={d.url}>{d.text}</a></li>;\r\n                else\r\n                    return <li key={i}>{d.text}</li>;\r\n            }));\r\n        if (mail)\r\n            li.push(<li key='mail'><Icon type='mail' style={{marginRight: 15}}/><Text type='secondary'\r\n                                                                                      copyable>{mail}</Text></li>);\r\n        return <ul>{li}</ul>;\r\n    };\r\n    parseEdu = () => {\r\n        const edu = this.state.info.education;\r\n        if (!edu)\r\n            return [];\r\n        return <Timeline className='timeLine' mode=\"left\">{\r\n            edu.map((e, i) => {\r\n                const dot = e.status === \"processing\" ?\r\n                    <Icon type=\"clock-circle-o\" style={{fontSize: '16px'}}/> : undefined;\r\n                let descriptions = e.descriptions;\r\n                if (typeof (descriptions) === \"string\")\r\n                    descriptions = [descriptions];\r\n                descriptions = descriptions.map((d, j) => <Paragraph key={j} type=\"secondary\"\r\n                                                                     className=\"small\">{d}</Paragraph>);\r\n                return <Timeline.Item dot={dot} key={i}>{descriptions}</Timeline.Item>;\r\n            })\r\n        }\r\n        </Timeline>\r\n    };\r\n    parseCourses = () => {\r\n        if (!(this.state.info.courses))\r\n            return [];\r\n        const maxShow = this.state.info.courses.maxShow;\r\n        const courses = this.state.info.courses.list.slice(0, maxShow);\r\n        const presetColors = [\"magenta\", \"red\", \"volcano\", \"orange\", \"gold\", \"lime\", \"green\", \"cyan\", \"blue\", \"geekblue\", \"purple\"];\r\n        let colors = [];\r\n        while (colors.length < courses.length)\r\n            colors.push(...presetColors);\r\n        let tags = courses.map((c, i) => <Tag className='smaller' key={i} color={colors[i]}>{c}</Tag>);\r\n        if (tags.length === 0)\r\n            return [];\r\n        if (tags.length < this.state.info.courses.list.length)\r\n            tags.push(<Tag key='omitted'>...</Tag>);\r\n        return <Paragraph><Title level={4}>Courses</Title>{tags}</Paragraph>\r\n    };\r\n    parseCV = () => {\r\n        let cv = this.state.info.cv;\r\n        if (!cv)\r\n            return [];\r\n        if (typeof (cv) !== \"string\") {\r\n            if (!(cv.show))\r\n                return [];\r\n            cv = cv.url;\r\n        }\r\n        return <li><Button type='link' onClick={() => {\r\n            window.open(checkUrl(cv), '_blank')\r\n        }}>My Resume</Button></li>;\r\n    };\r\n\r\n    render() {\r\n        const info = this.state.info;\r\n        if (!info)\r\n            return <div/>;\r\n        return (\r\n            <div>\r\n                <Row type='flex' justify='space-between'>\r\n                    <Col span={8}>\r\n                        <Title level={2}><Text type='secondary'>HELLO,</Text> <br/> I AM {info.name}</Title>\r\n                        <Paragraph>\r\n                            {this.parseList()}\r\n                        </Paragraph>\r\n                        <div className='margin-bottom-large'/>\r\n                        <Divider orientation='left'> <Title level={3} className=\"right\">EDUCATION</Title></Divider>\r\n                        {this.parseEdu()}\r\n                        {this.parseCourses()}\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <a href={info.github}>\r\n                            <Card\r\n                                hoverable\r\n                                cover={<img alt=\"Imagine that I'm very handsome\"\r\n                                            src={checkUrl(info.cover)}/>}\r\n                            >\r\n                                <Meta title={info.name} description={<p className='small '>{info.github}</p>}/>\r\n                            </Card>\r\n                        </a>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Divider><Title level={3}>Research Interests</Title></Divider>\r\n                        <Paragraph type='secondary' className='justify indent '>\r\n                            <div dangerouslySetInnerHTML={{__html: info.interests}}/>\r\n                        </Paragraph>\r\n                        <div className=\"margin-top-large\"/>\r\n                        <Divider><Title level={3}>FYI</Title></Divider>\r\n                        <ul>\r\n                            <li><Button type='link' onClick={() => this.props.changeKey('paper')}>My\r\n                                Publications</Button>\r\n                            </li>\r\n                            <li><Button type='link' onClick={() => this.props.changeKey('program')}>My Programs</Button>\r\n                            </li>\r\n                            <li><Button type='link' onClick={() => this.props.changeKey('work')}>My Work\r\n                                Experience</Button>\r\n                            </li>\r\n                            <li><Button type='link' onClick={() => {\r\n                                window.open(info.github, '_blank')\r\n                            }}>My Github Page</Button></li>\r\n                            {this.parseCV()}\r\n                        </ul>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Typography, Collapse, Empty} from 'antd';\r\nimport {getPapers, checkUrl} from \"./getData\";\r\n\r\nconst {Panel} = Collapse;\r\nconst {Text} = Typography;\r\n\r\nexport class Papers extends Component {\r\n    state = {\r\n        data: []\r\n    };\r\n    static supplementMaterial = (data) => {\r\n        const supplement = data.supplement;\r\n        if (!supplement)\r\n            return <Empty description=\"There is no supplement materials for this paper.\"/>;\r\n        if (supplement.type === 'image')\r\n            return <img width='100%' alt='imagine there is a poster' src={checkUrl(supplement.src)}/>;\r\n        else if (supplement.type === 'video')\r\n            return <div dangerouslySetInnerHTML={{__html: supplement.src}}/>;\r\n        else\r\n            return <Empty description=\"There is no supplement materials for this paper.\"/>;\r\n    };\r\n\r\n    static computeIndexes(str, subStr) {\r\n        if (!subStr)\r\n            return [];\r\n        if (typeof (subStr) === \"string\")\r\n            subStr = [subStr];\r\n        let indexes = [];\r\n        subStr.forEach(sub => {\r\n            const start = str.indexOf(sub);\r\n            const end = start + sub.length;\r\n            indexes.push(...[...Array(end).keys()].filter(i => i >= start));\r\n        });\r\n        return new Set(indexes);\r\n    }\r\n\r\n    static computeClassArray(content, boldIndex, italicIndex, markIndex) {\r\n        const classArray = [...Array(content.length).keys()].map(i => {\r\n            let classes = [];\r\n            if (boldIndex.has(i))\r\n                classes.push('bold');\r\n            if (italicIndex.has(i))\r\n                classes.push('italic');\r\n            if (markIndex.has(i))\r\n                classes.push('mark');\r\n            return classes.join('+');\r\n        });\r\n        let intervals = [];\r\n        let intervalClasses = [];\r\n        let currentClass = classArray[0];\r\n        let currentIndex = 0;\r\n        for (let i = 1; i < classArray.length; i++) {\r\n            if (classArray[i] === currentClass)\r\n                continue;\r\n            intervals.push([currentIndex, i]);\r\n            intervalClasses.push(currentClass);\r\n            currentIndex = i;\r\n            currentClass = classArray[i];\r\n        }\r\n        intervals.push([currentIndex, classArray.length]);\r\n        intervalClasses.push(currentClass);\r\n        return {intervals: intervals, classes: intervalClasses};\r\n    }\r\n\r\n    static header = (data) => {\r\n        const content = data.content;\r\n        const boldIndex = Papers.computeIndexes(content, data.bold);\r\n        const italicIndex = Papers.computeIndexes(content, data.italic);\r\n        const markIndex = Papers.computeIndexes(content, data.mark);\r\n        const interval_class = Papers.computeClassArray(content, boldIndex, italicIndex, markIndex);\r\n        let texts = [];\r\n        for (let i = 0; i < interval_class.intervals.length; i++) {\r\n            const interval = interval_class.intervals[i];\r\n            const css = interval_class.classes[i];\r\n            let strong = css.indexOf(\"bold\") > -1;\r\n            let mark = css.indexOf(\"mark\") > -1;\r\n            let cssClass = \"\";\r\n            if (css.indexOf(\"italic\")>-1)\r\n                cssClass = \"italic\";\r\n            texts.push(<Text strong={strong} mark={mark} key={i}\r\n                             className={cssClass}>{content.slice(interval[0], interval[1])}</Text>);\r\n        }\r\n        const arxiv = data.arxiv;\r\n        if (arxiv)\r\n            texts.push(<Text key='arxiv'>&nbsp;&nbsp;&nbsp;&nbsp;<a href={arxiv} target=\"_blank\">[arxiv]</a></Text>);\r\n        const pdf = data.pdf;\r\n        if (pdf)\r\n            texts.push(<Text key='pdf'>&nbsp;&nbsp;&nbsp;&nbsp;<a href={checkUrl(pdf)}\r\n                                                                  target=\"_blank\">[pdf]</a></Text>);\r\n        const github = data.github;\r\n        if (github)\r\n            texts.push(<Text key='github'>&nbsp;&nbsp;&nbsp;&nbsp;<a href={checkUrl(github)}\r\n                                                                     target=\"_blank\">[github]</a></Text>);\r\n        return <Text className='paperInfo'>{texts}</Text>;\r\n    };\r\n\r\n    componentWillMount() {\r\n        getPapers(data => this.setState({data}));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Collapse bordered={false} defaultActiveKey={[]}>\r\n                {this.state.data.map((d, i) => <Panel key={i}\r\n                                                      header={Papers.header(d)}>{Papers.supplementMaterial(d)}</Panel>)}\r\n            </Collapse>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {getPrograms} from \"./getData\";\r\nimport {Typography, Divider} from 'antd';\r\n\r\nconst {Title, Paragraph} = Typography;\r\n\r\nclass Program extends Component {\r\n    render() {\r\n        const data = this.props.data;\r\n        const orient = this.props.order % 2 ? 'right' : 'left';\r\n        return (\r\n            <Typography className='margin-top-large'>\r\n                <Divider orientation={orient}> <Title level={3}>{data.title}</Title></Divider>\r\n                <Paragraph type=\"secondary\"\r\n                           className={orient + ' margin-' + orient}>{data.start} - {data.end}</Paragraph>\r\n                <Paragraph className={orient === 'right' ? 'margin-right' : ''}>\r\n                    <ul className={orient + 'List'}>\r\n                        {data.descriptions.map((d, i) => <li key={i}>{d}</li>)}\r\n                    </ul>\r\n                </Paragraph>\r\n            </Typography>\r\n        )\r\n    }\r\n}\r\n\r\nexport class Programs extends Component {\r\n    state = {\r\n        data: []\r\n    };\r\n\r\n    componentWillMount() {\r\n        getPrograms(data =>this.setState({data}));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.data.map((d, i) => <Program data={d} key={i} order={i}/>)}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Typography, Descriptions, Divider} from 'antd';\r\nimport {getWorks} from \"./getData\";\r\n\r\nconst {Title, Paragraph, Text} = Typography;\r\n\r\nclass Work extends Component {\r\n    parseData = (key, val) => {\r\n        const span = val.span;\r\n        const value = val.value || val;\r\n        if (typeof (value) === \"string\") // val is a string\r\n            return <Descriptions.Item span={span} label={key} key={key}>{value}</Descriptions.Item>;\r\n        else if (value.length !== undefined) // val is a list\r\n            return <Descriptions.Item span={span} label={key} key={key}>\r\n                <ul>{value.map((d, i) => <li key={i}>{d}</li>)}</ul>\r\n            </Descriptions.Item>;\r\n        else {\r\n            return <div/>;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const basicInfo = this.props.data.required;\r\n        const detailInfo = this.props.data.detail;\r\n        const title = <Divider orientation=\"left\"><Title level={3}>{basicInfo.title} <Text\r\n            type=\"secondary\" className='smaller'>({basicInfo.from} - {basicInfo.to})</Text></Title></Divider>;\r\n        return (\r\n            <Descriptions className=\"margin-top-large\" title={title} bordered>\r\n                {Object.keys(detailInfo).map(k => this.parseData(k, detailInfo[k]))}\r\n            </Descriptions>\r\n        )\r\n    }\r\n}\r\n\r\nexport class Works extends Component {\r\n\r\n    state = {\r\n        data: []\r\n    };\r\n\r\n    componentWillMount() {\r\n        getWorks(data => this.setState({data}));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.data.map((d, i) => <Work data={d} key={i}/>)}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport {Layout, Menu, Breadcrumb, Typography, Button} from 'antd';\r\nimport {Info} from \"./info\";\r\nimport {Papers} from \"./paper\";\r\nimport {Programs} from \"./program\";\r\nimport {Works} from \"./work\";\r\nimport './main.css';\r\nimport {getInfo} from \"./getData\";\r\n\r\nconst {Text} = Typography;\r\nconst {Header, Content, Footer} = Layout;\r\n\r\nexport class Main extends Component {\r\n    changeKey = (key) => {\r\n        const item = {key: key};\r\n        this.handleMenuClick(item);\r\n    };\r\n    state = {\r\n        info: [],\r\n        content: <Info changeKey={this.changeKey.bind(this)}/>,\r\n        title: \"About Me\",\r\n        key: \"info\"\r\n    };\r\n    handleMenuClick = (item) => {\r\n        const key = item.key;\r\n        let content;\r\n        let title;\r\n        switch (key) {\r\n            case 'info':\r\n                content = <Info changeKey={this.changeKey.bind(this)}/>;\r\n                title = \"About Me\";\r\n                break;\r\n            case 'paper':\r\n                content = <Papers/>;\r\n                title = \"Publications\";\r\n                break;\r\n            case 'program':\r\n                content = <Programs/>;\r\n                title = \"Programs\";\r\n                break;\r\n            case 'work':\r\n                content = <Works/>;\r\n                title = \"Work Experience\";\r\n                break;\r\n            default:\r\n                content = null;\r\n                title = \"\";\r\n        }\r\n        this.setState({content, title, key});\r\n    };\r\n\r\n    componentWillMount() {\r\n        console.log('here');\r\n        getInfo(info => {\r\n            console.log(info);\r\n            this.setState({info: info})\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const info = this.state.info;\r\n        console.log(info);\r\n        if (!info)\r\n            return <div/>;\r\n        return (\r\n            <Layout>\r\n                <Header style={{position: 'fixed', zIndex: 1, width: '100%'}}>\r\n                    <div className=\"logo\">{info.name}</div>\r\n                    <Menu\r\n                        theme=\"dark\"\r\n                        mode=\"horizontal\"\r\n                        defaultSelectedKeys={['info']}\r\n                        selectedKeys={[this.state.key]}\r\n                        style={{lineHeight: '64px'}}\r\n                        onClick={this.handleMenuClick}\r\n                    >\r\n                        <Menu.Item key=\"info\">About Me</Menu.Item>\r\n                        <Menu.Item key=\"paper\">Publications</Menu.Item>\r\n                        <Menu.Item key=\"program\">Programs</Menu.Item>\r\n                        <Menu.Item key=\"work\">Work Experience</Menu.Item>\r\n                    </Menu>\r\n                </Header>\r\n                <Content style={{padding: '0 50px', marginTop: 64}}>\r\n                    <Breadcrumb style={{margin: '16px 0'}}>\r\n                        <Breadcrumb.Item><Button type='link' style={{padding: 0}}\r\n                                                 onClick={() => this.changeKey(\"info\")}>{info.name}</Button></Breadcrumb.Item>\r\n                        <Breadcrumb.Item>{this.state.title}</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                    <div style={{\r\n                        background: '#fff',\r\n                        padding: 24,\r\n                        minHeight: 380,\r\n                    }}>\r\n                        {this.state.content}\r\n                    </div>\r\n                </Content>\r\n                <Footer style={{textAlign: 'center'}}>Contact: <Text type='secondary'\r\n                                                                     copyable>{info.mail}</Text></Footer>\r\n            </Layout>)\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Main} from \"./main\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}